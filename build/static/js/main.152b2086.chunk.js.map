{"version":3,"sources":["../node_modules/peerjs/dist sync","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/Rules/index.js","components/WaitingRoom/index.js","components/Participant/index.js","components/GameRoom/videoFunctions.js","components/GameRoom/logicFunctions.js","components/GameRoom/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AppId","MeasurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","createRoom","a","db","collection","add","Night","checkMajority","checkMedic","checkSeer","checkWerewolf","dead","gameStarted","majorityReached","medic","medicChoice","players","seer","seerChoice","villagers","villagersChoice","votesVillagers","votesWerewolves","werewolves","werewolvesChoice","room","user","uid","doc","users","get","app","initializeApp","this","firestore","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","withRouter","NavigationAuth","to","SignOut","NavigationNonAuth","Navigation","Landing","handleOnChange","event","roomId","target","handleNewGame","bind","handleJoinGame","Container","display","maxWidth","Box","width","justifyContent","alignItems","flexDirection","margin","Button","variant","color","height","onSubmit","TextField","label","onChange","initialState","username","passwordOne","passwordTwo","error","SignUpFormBase","then","console","log","set","currentGame","catch","preventDefault","name","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","go","SignInForm","SignInPage","intialState","PasswordChangeForm","PasswordChange","displayList","useState","setUsers","useEffect","snapshot","userList","forEach","key","data","length","map","Rules","open","setOpen","fullWidth","handleClose","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","WaitingRoom","Lobby","SignIn","Participant","userStreamTuple","handleVillagerVoteButton","videoRef","night","ourDocId","role","useRef","userPeerId","stream","current","srcObject","className","ref","autoPlay","muted","addVideoStream","newTuple","userStreamArr","includes","connectToNewUser","myPeer","call","on","userVideoStream","ourPeerId","peers","has","peer","handleNightToDay","game","assignRolesAndStartGame","handleWerewolfVote","handleSeer","handleMedic","filter","villager","gameId","update","handleDayToNight","handleMajority","werewolf","wereWolvesChoice","totalPlayers","votingObject","player","Object","Math","floor","where","userDocId","docs","i","j","random","GameRoom","Set","Peer","undefined","secure","host","port","navigator","mediaDevices","getUserMedia","video","audio","answer","onSnapshot","userId","FieldValue","arrayUnion","userStream","exact","path","component","LandingPage","SignUp","HomePage","Account","Admin","ROUTES","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.152b2086.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 107;","import React from 'react';\n \nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n \nexport default FirebaseContext;","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  AppId: process.env.REACT_APP_APP_ID,\n  MeasurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n\n  // async createRoom2() {\n  //   await this.db\n  //     .collection(\"rooms\")\n  //     .add({})\n  //     .then((room) => {\n  //       console.log(\"Room ID in firebase.js: \", room.id);\n  //       return room.id;\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error in creating new room: \", error);\n  //     });\n  // }\n\n  createRoom = async () => {\n    const room = await this.db.collection(\"rooms\").add({\n      Night: false,\n      checkMajority: false,\n      checkMedic: false,\n      checkSeer: false,\n      checkWerewolf: false,\n      dead: [],\n      gameStarted: false,\n      majorityReached: false,\n      medic: \"\",\n      medicChoice: \"\",\n      players: [],\n      seer: \"\",\n      seerChoice: \"\",\n      villagers: [\"sentinel\"],\n      villagersChoice: \"\",\n      votesVillagers: [],\n      votesWerewolves: [],\n      werewolves: [],\n      werewolvesChoice: \"\"\n    });\n    return room.id;\n  };\n\n  // *** User API ***\n  //Get specific user\n  user = (uid) => this.db.collection(\"users\").doc(`${uid}`);\n\n  //Get all users\n  users = () => this.db.collection(\"users\").get();\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n \nexport default Firebase;\n \nexport { FirebaseContext, withFirebase };","import React from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from \"react\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        (authUser) => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AuthUserContext from './context'\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n \nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    \n    componentDidMount() {\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\n          authUser => {\n            if (!condition(authUser)) {\n              this.props.history.push(ROUTES.SIGN_IN);\n            }\n          },\n        );\n      }\n   \n      componentWillUnmount() {\n        this.listener();\n      }\n\n    render() {\n        return (\n            <AuthUserContext.Consumer>\n            {authUser =>\n                condition(authUser) ? <Component {...this.props} /> : null\n                }\n            </AuthUserContext.Consumer>\n        )\n    }\n  }\n \n  return withRouter(withFirebase(WithAuthorization));\n};\n \nexport default withAuthorization;","export const LANDING = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const ADMIN = \"/admin\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const GAME_ROOM = `/gameroom`;\nexport const WAITING_ROOM = '/waitingroom'\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {(authUser) => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    {/* <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.GAME_ROOM}>Lobby</Link>\n    </li> */}\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Sign-Up</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { TextField, Container, Button, Box } from '@material-ui/core';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomId: '',\n    };\n    this.handleNewGame = this.handleNewGame.bind(this);\n    this.handleJoinGame = this.handleJoinGame.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  async handleNewGame() {\n    const roomId = await this.props.firebase.createRoom();\n    this.props.history.push(`/WaitingRoom/${roomId}`);\n  }\n\n  handleOnChange = (event) => {\n    this.setState({\n      roomId: event.target.value,\n    });\n  };\n\n  // should we do error checking for rooms that don't exist when entering full URL manually?\n  async handleJoinGame(event) {\n    this.props.history.push(`/WaitingRoom/${this.state.roomId}`);\n  }\n\n  render() {\n    return (\n      <div>\n        <Container id='landing-page-container' display='flex' maxWidth='sm'>\n          <Box\n            display='flex'\n            width='100%'\n            justifyContent='center'\n            alignItems='center'\n          >\n            <h1 id='werewolf-title'>WEREWOLF</h1>\n          </Box>\n          <Box\n            id='landing-page-buttons-box'\n            display='flex'\n            flexDirection='column'\n            justifyContent='center'\n            alignItems='stretch'\n            width='100%'\n            margin='50%'\n          >\n            <Box\n              id='new-game-button-box'\n              display='flex'\n              flexDirection='row'\n              width='100%'\n              justifyContent='center'\n              alignItems='center'\n              margin='5%'\n            >\n              <Button\n                variant='outlined'\n                color='secondary'\n                height='100%'\n                width='100%'\n                onClick={this.handleNewGame}\n              >\n                New Game\n              </Button>\n            </Box>\n            <Box\n              id='join-game-button-box'\n              display='flex'\n              flexDirection='row'\n              height='100%'\n              width='100%'\n              alignItems='center'\n            >\n              <form onSubmit={this.handleJoinGame}>\n                <TextField\n                  id='join-game-textfield'\n                  variant='filled'\n                  label='Join Game ID'\n                  color='secondary'\n                  value={this.state.roomId}\n                  onChange={this.handleOnChange}\n                />\n                <Button type='submit' variant='outlined' color='secondary'>\n                  Join Game\n                </Button>\n              </form>\n            </Box>\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(Landing));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...initialState };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne } = this.state;\n    \n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in Firestore\n        console.log(\"authUser\", authUser)\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          currentGame: \"\"\n        });\n      })\n      .then((authUser) => {\n        this.setState({ ...initialState });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Username\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst initialState = {\n  email: \"\",\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...initialState };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...initialState });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\n\nimport { TextField, Container, Button } from \"@material-ui/core\";\n\nconst SignInPage = () => (\n  <Container>\n    <div>\n      <h1>SignIn</h1>\n      <SignInForm />\n      <PasswordForgetLink />\n      <SignUpLink />\n    </div>\n  </Container>\n);\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...initialState };\n  }\n\n  onSubmit = (event) => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...initialState });\n        this.props.history.go(0);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <Container>\n        <form onSubmit={this.onSubmit}>\n          <TextField\n            name=\"email\"\n            value={email}\n            variant=\"outlined\"\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n          />\n          <TextField\n            name=\"password\"\n            value={password}\n            variant=\"outlined\"\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <Button\n            disabled={isInvalid}\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n\n          {error && <p>{error.message}</p>}\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst SignInForm = withRouter(withFirebase(SignInFormBase));\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from 'react';\n\nimport { withAuthorization } from '../Session'\n \nconst Home = () => (\n  <div>\n    <h1>Home</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n);\n \nconst condition = authUser => !!authUser;\n \nexport default withAuthorization(condition)(Home);","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nconst intialState = {\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...intialState };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...intialState });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from \"react\";\n\n\nimport PasswordChangeForm from \"../PasswordChange\";\nimport { withAuthorization, AuthUserContext } from '../Session';\n\nconst AccountPage = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser => (\n        <div>\n          <h1> Account: {authUser.email}</h1>\n          <PasswordChangeForm />\n        </div>\n      )}\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n \nexport default withAuthorization(condition)(AccountPage);\n","import React, { useEffect, useState } from 'react';\nimport { withFirebase } from '../Firebase';\n\nconst Admin = (props) => {\n  const [users, setUsers] = useState(null);\n  //   const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // setLoading(true);\n    props.firebase\n      .users()\n      .then((snapshot) => {\n        if (!snapshot) {\n          setUsers([]);\n        } else {\n          let userList = [];\n          snapshot.forEach((user) => {\n            // console.log(user.data())\n            userList.push({ key: user.id, ...user.data() });\n          });\n          setUsers(userList);\n        }\n      })\n      .catch((error) => {\n        //make an error handler\n      });\n  }, []);\n\n  let displayList;\n  if (users === null) {\n    displayList = <li>LOADING...</li>;\n  } else if (users.length === 0) {\n    displayList = <li>NO USERS FOUND</li>;\n  } else {\n    displayList = users.map((user) => {\n      return (\n        <li key={user.key}>\n          <div>Username: {user.username} </div> <div>Email: {user.email}</div>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <h1>Admin</h1>\n      <p>Restricted area! Only users with the admin role are authorized.</p>\n      <ul>{displayList}</ul>\n    </div>\n  );\n};\n// const condition = authUser =>\n//   authUser && !!authUser.roles[ROLES.ADMIN];\nexport default withFirebase(Admin);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function Rules() {\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth] = React.useState(true);\n  const [maxWidth] = React.useState(\"xl\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Rules\n      </Button>\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Rules</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            The game proceeds in alternating night and day rounds. beginning\n            with nighttime.\n          </DialogContentText>\n          <DialogContentText>The Night</DialogContentText>\n          <DialogContentText>\n            At night, the moderator tells all the players, \"Close your eyes.\"\n            Everyone begins slapping their knees (or table) to cover up any\n            noises of the night.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            The moderator says, \"Werewolves, open your eyes.\" The werewolves do\n            so, and look around to recognize each other. The moderator should\n            also note who the werewolves are. The moderator says \"Werewolves,\n            pick someone to kill.\" The werewolves silently agree on one villager\n            (It's critical that they remain silent). The other players are\n            sitting there with their eyes closed, and the werewolves don't want\n            to give themselves away. Sign language is appropriate, or just\n            pointing, nodding, raising eyebrows, and so on.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            When the werewolves have agreed on a victim, and the moderator\n            understands who they picked, the moderator says, \"Werewolves, close\n            your eyes.\"{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            Now, the moderator awakens the Doctor and says, \"Doctor, who would\n            you like to heal?\" The Doctor selects someone they'd like to heal.\n            The person chosen (which could be himself) will survive if the\n            werewolves chose to kill them. If someone was killed, and then saved\n            by the Doctor, the moderator will let the village know by saying,\n            \"Someone has been saved\", at the beginning of day time.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            The moderator says \"Seer, open your eyes. Seer, pick someone to ask\n            about.\" The seer opens their eyes and silently points at another\n            player. (Again, it is critical that this be entirely silent --\n            because the seer doesn't want to reveal his identity to the\n            werewolves.){\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            The moderator silently signs thumbs-up if the seer pointed at a\n            werewolf, and thumbs-down if the seer pointed at an innocent\n            villager. The moderator then says, \"Seer, close your eyes.\"\n          </DialogContentText>\n          <DialogContentText>\n            The moderator says, \"Everybody open your eyes; it's daytime.\" And\n            let's the villager know who has been killed. That person is\n            immediately dead and out of the game. They do not reveal their\n            identity.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            Alternative rule: After you die, you reveal what role you had.{\" \"}\n          </DialogContentText>\n          <DialogContentText>The Day </DialogContentText>\n          <DialogContentText>\n            For the first day, go around and have everyone introduce themselves\n            (Example: Hey, I'm Matt. I'm the baker here in town, and I'm a\n            villager.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            Daytime is very simple; all the living players gather in the village\n            and decide who to kill. As soon as a majority of players vote for a\n            particular player to kill, the moderator says \"Ok, you're dead.\"{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            Alternative rule: To keep the game moving along, you can put a time\n            limit to how long a day is, and if the village doesn't chose someone\n            to kill, they miss the opportunity.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            There are no restrictions on speech. Any living player can say\n            anything they want -- truth, misdirection, nonsense, or a barefaced\n            lie. Dead players may not speak at all. Similarly, as soon as a\n            majority vote indicates that a player has been chosen to be killed,\n            they are dead. If they want to protest their innocence or reveal\n            some information (like the seer's visions), they must do it before\n            the vote goes through.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            Once a player is killed, night falls and the cycle repeats.{\" \"}\n          </DialogContentText>\n          <DialogContentText>\n            Moderator note: Continue to wake up the Doctor and Seer even if they\n            are no longer alive.\n          </DialogContentText>\n          <DialogContentText>Winning</DialogContentText>\n          <DialogContentText>\n            The villagers win if they kill both werewolves.\n          </DialogContentText>\n          <DialogContentText>\n            The werewolves win if they kill enough villagers so that the numbers\n            are even. (Example: Two werewolves and two villagers)\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Container, Button, Box } from \"@material-ui/core\";\nimport SignIn from \"../SignIn\";\nimport { AuthUserContext } from \"../Session\";\nimport Rules from \"../Rules\";\n\nconst Lobby = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {(authUser) => (authUser ? <WaitingRoom /> : <SignIn />)}\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst WaitingRoom = () => {\n  return (\n    <div>\n      <h1>Lobby</h1>\n      <Container maxWidth=\"sm\">\n        <Box display=\"flex\" flexDirection=\"column\" width=\"60%\">\n          <Box display=\"flex\" flexDirection=\"row\" width=\"100%\">\n            <Rules />\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\" width=\"100%\">\n            <Button variant=\"outlined\" color=\"secondary\" disabled>\n              Start\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Lobby;\n","import React, { useRef, useEffect } from 'react';\n\nexport const Participant = ({\n  userStreamTuple,\n  handleVillagerVoteButton,\n  night,\n  ourDocId,\n  role,\n}) => {\n  const videoRef = useRef();\n  const [userPeerId, stream] = userStreamTuple;\n\n  useEffect(() => {\n    videoRef.current.srcObject = stream;\n  }, []);\n\n  //need to put in logic for closing video if disconnection\n\n  return (\n    <div className='participant'>\n      <h3>{userPeerId}</h3>\n      <video ref={videoRef} autoPlay={true} muted={true} />\n      <button onClick={() => handleVillagerVoteButton(userPeerId)}>Kill</button>\n    </div>\n  );\n};\n","/**\n * Adds a user's stream to array of streams in local state (if it isn't in there already)\n * @param {*} stream - an MediaStream type object containing the user's webcam + mic stream\n * @param {*} userPeerId - the user's PeerJS ID\n */\nexport async function addVideoStream(stream, userPeerId) {\n  let newTuple = [userPeerId, stream];\n  if (this.state.userStreamArr.includes(newTuple)) return;\n  await this.setState({\n    userStreamArr: [...this.state.userStreamArr, newTuple],\n  });\n}\n\n/**\n * When a new user connects, this function grabs their PeerJS object and stream, and connects the new user to pre-existing users\n * @param {*} userPeerId - the user's PeerJS ID\n * @param {*} stream - an MediaStream type object containing the user's webcam + mic stream\n * @param {*} myPeer - the user's PeerJS object\n */\nexport function connectToNewUser(userPeerId, stream, myPeer) {\n  const call = myPeer.call(userPeerId, stream);\n  if (!call) return;\n\n  //const video = document.createElement('video');\n  call.on('stream', (userVideoStream) => {\n    if (userPeerId !== this.state.ourPeerId) {\n      if (!this.peers.has(call.peer)) {\n        this.addVideoStream(userVideoStream, userPeerId);\n      }\n    }\n  });\n\n  //not sure hwo this works, as the video declared above doesn't really do anything.\n  //we used to pass it into addVideoStream a while back, but we don't use it in that fucnction at all either\n  // call.on('close', () => {\n  //   video.remove();\n  // });\n}\n","/**\n * Handles the transition from night to day by checking if werewolves, seer, and medic all voted; kills off the selected player only if the werewolves' choice is not the same as the medic's choice, and updates the game status\n * @param {*} game - game object gotten from the snapshot of the 'rooms' document\n */\n\nexport function handleNightToDay(game) {\n  if (game.villagers.length === 1) {\n    this.assignRolesAndStartGame(game);\n  }\n  this.handleWerewolfVote(game); // checks if werewolves have agreed on a vote, and sets in our DB\n  this.handleSeer();\n  this.handleMedic();\n  if (game.checkWerewolf && game.checkSeer && game.checkMedic) {\n    if (game.werewolvesChoice === game.medicChoice) {\n      game.werewolvesChoice = '';\n    } else {\n      game.villagers = game.villagers.filter((villager) => {\n        return villager !== game.werewolvesChoice;\n      });\n      if (game.werewolvesChoice !== '') {\n        game.dead.push(game.werewolvesChoice);\n      }\n    }\n  } //outer IF\n  else {\n    return;\n  }\n  game.Night = false;\n  game.medicChoice = '';\n  game.votesWerewolves = '';\n  game.checkWerewolf = false;\n  game.checkMedic = false;\n  game.checkSeer = false;\n  game.votesWerewolves = [];\n  game.villagersChoice = '';\n  //updating game state in DB\n\n  this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .update(game);\n\n  this.setState({ night: false });\n}\n\n/**\n * Handles the transition from day to night by filtering out the player killed, checking if they were a villager or werewolf, resetting all votes, and updating game status\n * @param {*} game - game object gotten from the snapshot of the 'rooms' document\n */\n\nexport function handleDayToNight(game) {\n  this.handleMajority(game);\n  if (game.majorityReached) {\n    if (game.villagers.includes(game.villagersChoice)) {\n      game.villagers = game.villagers.filter((villager) => {\n        return villager !== game.villagersChoice;\n      });\n    } else {\n      game.werewolves = game.werewolves.filter((werewolf) => {\n        return werewolf !== game.villagersChoice;\n      });\n    }\n    game.dead.push(game.villagersChoice);\n  } //outer IF\n  else {\n    return;\n  }\n  game.Night = true;\n  // game.villagersChoice = \"\"\n  game.wereWolvesChoice = '';\n  game.majorityReached = false;\n  game.votesVillagers = [];\n  //updating game state in DB\n\n  console.log('DURING DAY, ABOUT TO GO TO NIGHT', game);\n\n  this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .update(game);\n\n  this.setState({ night: true });\n}\n\n/**\n * Checks for a majority vote on all players killing one person; once found, updates the villagers' choice which will be used to announce the player has been killed when day turns to night.\n * @param {*} game - game object gotten from the snapshot of the 'rooms' document once the game starts\n */\nexport async function handleMajority(game) {\n  //end goal to update villageGers\n\n  const totalPlayers = game.villagers.length + game.werewolves.length;\n  let votingObject = {}; //key will be a user, value is how many votes for that user\n  // let players = await this.props.firebase.db.collection('rooms').doc(this.state.gameId).data().players\n\n  let players = await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .get();\n  let votesVillagers = players.data().votesVillagers;\n\n  for (let player of votesVillagers) {\n    // need to add rooms and users tables to state\n    if (Object.keys(votingObject).includes(player)) {\n      votingObject[player] += 1;\n    } else {\n      votingObject[player] = 1;\n    }\n  }\n  console.log('in handle majority', votingObject);\n\n  for (let player of Object.keys(votingObject)) {\n    if (votingObject[player] > Math.floor(totalPlayers / 2)) {\n      this.props.firebase.db\n        .collection('rooms')\n        .doc(this.state.gameId)\n        .update({ villagersChoice: player, majorityReached: true });\n    }\n  }\n}\n\n/**\n * Handler function which updates a villager's vote based on the user they are choosing to kill\n * @param {*} userPeerId - the user's PeerJS ID (that is, the user a villager is trying to kill)\n */\nexport async function handleVillagerVoteButton(userPeerId) {\n  const userDocId = await this.props.firebase.db\n    .collection('users')\n    .where('userId', '==', userPeerId)\n    .get();\n\n  let votesVillagers = await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .get();\n\n  votesVillagers = votesVillagers.data().votesVillagers;\n  votesVillagers.push(userDocId.docs[0].id);\n\n  await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .update({ votesVillagers });\n}\n\n/**\n * Checks for a majority vote on werewolves killing one person; once found, updates the werewolves' choice which will be used to announce the player has been killed when night turns to day.\n * @param {*} game - game object gotten from the snapshot of the 'rooms' document\n */\nexport async function handleWerewolfVote(game) {\n  let players = await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .get();\n\n  players = players.data().werewolves;\n  // ^^^ do we need this code above with 'players' ?\n\n  const totalPlayers = game.werewolves.length;\n\n  let votesWerewolves = await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .get();\n  votesWerewolves = votesWerewolves.data().votesWerewolves;\n\n  console.log('what are my villagers', votesWerewolves);\n\n  let votingObject = {};\n\n  for (let player of votesWerewolves) {\n    // need to add rooms and users tables to state\n    if (Object.keys(votingObject).includes(player)) {\n      votingObject[player] += 1;\n    } else {\n      votingObject[player] = 1;\n    }\n  }\n  console.log('voting object is', votingObject);\n  for (let player of Object.keys(votingObject)) {\n    if (votingObject[player] > Math.floor(totalPlayers / 2)) {\n      // this.props.firebase.db.collection('rooms').doc(this.state.gameId).villagersChoice.update(player) // find real way to do this\n      this.props.firebase.db\n        .collection('rooms')\n        .doc(this.state.gameId)\n        .update({ werewolvesChoice: player, checkWerewolf: true });\n    }\n  }\n}\n\n/**\n * Checks if the seer voted, and (if so) subsequently updates the 'checkSeer' boolean in the 'rooms' database\n */\nexport async function handleSeer() {\n  const player = await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .get();\n\n  const seerChoice = player.data().seerChoice;\n\n  if (seerChoice === '') return;\n  else {\n    console.log('setting checkSeer to true');\n    this.props.firebase.db\n      .collection('rooms')\n      .doc(this.state.gameId)\n      .update({ checkSeer: true });\n  }\n}\n\n/**\n * Checks if the medic voted, and (if so) subsequently updates the 'checkMedic' boolean in the 'rooms' database\n */\nexport async function handleMedic() {\n  const player = await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .get();\n\n  const medicChoice = player.data().medicChoice;\n\n  if (medicChoice === '') return;\n  else {\n    console.log('setting checkMedic to true');\n    this.props.firebase.db\n      .collection('rooms')\n      .doc(this.state.gameId)\n      .update({ checkMedic: true });\n  }\n}\n\n/**\n * Randomly assigns roles to users, updates the roles in firestore, and subsequently updates the 'gameStarted' boolean in the 'rooms' database\n * @param {*} game - game object gotten from the snapshot of the 'rooms' database once the game starts\n */\nexport async function assignRolesAndStartGame(game) {\n  console.log('In assignRoles');\n  let users = await this.props.firebase.db\n    .collection('users')\n    .where('currentGame', '==', this.state.gameId)\n    .get();\n  users = users.docs;\n\n  //randomize later\n  console.log('what is users in assign roles', users);\n\n  let werewolves = [];\n  let villagers = [];\n\n  //shuffle users array\n  for (let i = users.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [users[i], users[j]] = [users[j], users[i]];\n  }\n\n  users.forEach((doc, i) => {\n    console.log('what does my user look like', doc.id);\n    let user = doc.id;\n\n    if (i < 2) {\n      console.log('werewolves are ', werewolves);\n      werewolves.push(user);\n    } else if (i === 2) {\n      this.props.firebase.db\n        .collection('rooms')\n        .doc(this.state.gameId)\n        .update({ seer: user });\n      villagers.push(user);\n    } else if (i === 3) {\n      this.props.firebase.db\n        .collection('rooms')\n        .doc(this.state.gameId)\n        .update({ medic: user });\n      villagers.push(user);\n    } else {\n      villagers.push(user);\n    }\n  });\n\n  await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .update({ werewolves: werewolves });\n  await this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .update({ villagers: villagers });\n\n  this.props.firebase.db\n    .collection('rooms')\n    .doc(this.state.gameId)\n    .update({ gameStarted: true });\n}\n","import React from 'react';\nimport Peer from 'peerjs';\nimport { Participant } from '../Participant';\nimport * as firebase from 'firebase';\nimport { withFirebase } from '../Firebase';\nimport { addVideoStream, connectToNewUser } from './videoFunctions';\nimport {\n  handleNightToDay,\n  handleDayToNight,\n  handleMajority,\n  handleVillagerVoteButton,\n  handleWerewolfVote,\n  handleSeer,\n  handleMedic,\n  assignRolesAndStartGame,\n} from './logicFunctions';\n\nclass GameRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ourPeerId: '',\n      ourDocId: '',\n      gameId: '7xz6yB0zX9QUDlOPzyKZ',\n      userStreamArr: [],\n      role: '',\n      night: true,\n    };\n\n    this.peers = new Set();\n\n    this.connectToNewUser = connectToNewUser.bind(this);\n    this.addVideoStream = addVideoStream.bind(this);\n    this.handleMajority = handleMajority.bind(this);\n    this.handleNightToDay = handleNightToDay.bind(this);\n    this.handleDayToNight = handleDayToNight.bind(this);\n    this.assignRolesAndStartGame = assignRolesAndStartGame.bind(this);\n    this.handleVillagerVoteButton = handleVillagerVoteButton.bind(this);\n    this.handleWerewolfVote = handleWerewolfVote.bind(this);\n    this.handleMedic = handleMedic.bind(this);\n    this.handleSeer = handleSeer.bind(this);\n  }\n\n  async componentDidMount() {\n    const myPeer = new Peer(undefined, {\n      secure: true,\n      host: 'https://werewolf-capstone.web.app/',\n      port: '443',\n    });\n\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream) => {\n        this.addVideoStream(stream, this.state.ourPeerId);\n        myPeer.on('call', (call) => {\n          call.answer(stream);\n          call.on('stream', (userVideoStream) => {\n            if (!this.peers.has(call.peer)) {\n              this.addVideoStream(userVideoStream, call.peer);\n            }\n            this.peers.add(call.peer);\n          });\n        });\n        this.props.firebase.db\n          .collection('users')\n          .onSnapshot(async (snapshot) => {\n            let data = snapshot.docs;\n\n            //doc.data().userId is the user's PeerJS ID\n            data.forEach((doc) => {\n              if (this.state.ourPeerId !== doc.data().userId) {\n                this.connectToNewUser(doc.data().userId, stream, myPeer);\n              }\n            });\n          });\n        //create firebase method to look up individual game\n        this.props.firebase.db\n          .collection('rooms')\n          .doc(this.state.gameId)\n          .onSnapshot(async (snapshot) => {\n            let game = snapshot.data();\n\n            if (!game.gameStarted) return;\n\n            if (game.Night) {\n              this.handleNightToDay(game);\n            } else {\n              this.handleDayToNight(game);\n            }\n          });\n      });\n\n    myPeer.on('open', async (id) => {\n      this.setState({ ourPeerId: id });\n\n      const user = await this.props.firebase.db\n        .collection('users')\n        .add({ userId: id, currentGame: this.state.gameId });\n\n      this.setState({ ourDocId: user.id });\n\n      const roomsRef = this.props.firebase.db\n        .collection('rooms')\n        .doc(this.state.gameId);\n      roomsRef.update({\n        players: firebase.firestore.FieldValue.arrayUnion(user.id),\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.userStreamArr.map((userStream) => {\n          return (\n            <Participant\n              key={this.state.ourDocId}\n              userStreamTuple={userStream}\n              handleVillagerVoteButton={this.handleVillagerVoteButton}\n              ourDocId={this.state.ourDocId}\n              night={this.state.night}\n              role={this.state.role}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(GameRoom);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport LandingPage from \"../Landing\";\nimport SignUp from \"../SignUp\";\nimport SignIn from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport Account from \"../Account\";\nimport Admin from \"../Admin\";\nimport WaitingRoom from \"../WaitingRoom\";\nimport GameRoom from \"../GameRoom\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.SIGN_UP} component={SignUp} />\n      <Route path={ROUTES.SIGN_IN} component={SignIn} />\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n      <Route path={ROUTES.HOME} component={HomePage} />\n      <Route path={ROUTES.ACCOUNT} component={Account} />\n      <Route path={ROUTES.ADMIN} component={Admin} />\n      <Route path={ROUTES.GAME_ROOM} component={GameRoom} />\n      <Route path={ROUTES.WAITING_ROOM + \"/:roomId\"} component={WaitingRoom} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase'\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}